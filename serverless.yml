service: backend-template

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true
    noDeploy:
      - boto3
      - botocore
      - pylint
      - autopep8
      - pytest
  stage: ${self:provider.stage}
  project: backend-template
  aws-account-id: 111111111111
  prefix: ${self:custom.project}${self:custom.stage}
  sns-dead-arn: arn:aws:sns:${self:provider.region}:${self:custom.aws-account-id}:${self:custom.prefix}-dead
  sqs-dead-arn: arn:aws:sqs:${self:provider.region}:${self:custom.aws-account-id}:${self:custom.prefix}-dead

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'prod'}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        - arn:aws:ssm:${self:provider.region}:${self:custom.aws-account-id}:parameter/${self:custom.prefix}_*
    - Effect: Allow
      Action:
        - lambda:invokeFunction
      Resource:
        - arn:aws:lambda:${self:provider.region}:*:function:${self:custom.prefix}*
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - arn:aws:sns:${self:provider.region}:${self:custom.aws-account-id}:${self:custom.prefix}-*
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:GetQueueUrl
      Resource:
        - arn:aws:sqs:${self:provider.region}:${self:custom.aws-account-id}:${self:custom.prefix}-*
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:ListObjectsV2
      Resource:
        - arn:aws:s3:::${self:custom.prefix}-*/*

package:
  include:
    - src/**
  exclude:
    - .idea/**
    - .serverless/**
    - .vscode/**
    - venv/**
    - node_modules/**
    - __pycache__/**
    - ./*.iml

functions:

  ping:
    handler: src/handler.ping
    onError: ${self:custom.sns-dead-arn}
    memorySize: 128
    timeout: 30
    events:
      - http: GET ping

resources:
  Resources:

    # dead letters

    LambdasDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.prefix}-dead
        MessageRetentionPeriod: 1209600

    LambdasDeadSNS:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.prefix}-dead
        Subscription:
          - Protocol: sqs
            Endpoint: ${self:custom.sqs-dead-arn}

    DeadLetterQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: '*'
              Action: SQS:SendMessage
              Resource: ${self:custom.sqs-dead-arn}
              Condition:
                ArnEquals:
                  'aws:SourceArn': ${self:custom.sns-dead-arn}
        Queues:
          - Ref: LambdasDeadLetterQueue